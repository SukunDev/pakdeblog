@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap);
/*
! tailwindcss v3.2.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

body{
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
  font-family: Poppins, sans-serif;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.article{
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.article :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.article :where(a):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.article :where(strong):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.article :where(a strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(blockquote strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(thead th strong):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(ol):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.article :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.article :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.article :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.article :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.article :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.article :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.article :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.article :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.article :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
}

.article :where(ul):not(:where([class~="not-prose"] *)){
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.article :where(ol > li):not(:where([class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.article :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}

.article :where(hr):not(:where([class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.article :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.article :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

.article :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

.article :where(h1):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.article :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
  color: inherit;
}

.article :where(h2):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.article :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
  color: inherit;
}

.article :where(h3):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.article :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

.article :where(h4):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.article :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

.article :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.article :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.article :where(figcaption):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.article :where(code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.article :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

.article :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

.article :where(a code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(h1 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(h2 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.875em;
}

.article :where(h3 code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-size: 0.9em;
}

.article :where(h4 code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(blockquote code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(thead th code):not(:where([class~="not-prose"] *)){
  color: inherit;
}

.article :where(pre):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.article :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.article :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

.article :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

.article :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.article :where(thead):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.article :where(thead th):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.article :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.article :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 0;
}

.article :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: baseline;
}

.article :where(tfoot):not(:where([class~="not-prose"] *)){
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.article :where(tfoot td):not(:where([class~="not-prose"] *)){
  vertical-align: top;
}

.article{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.article :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.article :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.article :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.article :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.article :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

.article :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

.article :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.article :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.article :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.article :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.article :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.article :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.article :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.article :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.article :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.article :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.article :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.article :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.article{
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.article :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.article :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.article :where(blockquote):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.1111111em;
}

.article :where(h1):not(:where([class~="not-prose"] *)){
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.article :where(h2):not(:where([class~="not-prose"] *)){
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.article :where(h3):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.article :where(h4):not(:where([class~="not-prose"] *)){
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.article :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.article :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.article :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.article :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.article :where(figcaption):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.article :where(code):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
}

.article :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}

.article :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
}

.article :where(pre):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.article :where(ol):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}

.article :where(ul):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}

.article :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.article :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4285714em;
}

.article :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4285714em;
}

.article :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.article > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.article :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.prose-sm :where(.article > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.article :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.article > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.article :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.prose-sm :where(.article > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.article :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.article > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.article :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.article :where(hr):not(:where([class~="not-prose"] *)){
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.article :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(table):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.5;
}

.article :where(thead th):not(:where([class~="not-prose"] *)){
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.article :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.article :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.article :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.article :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.article :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.article :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm :where(.article > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.article :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-sm :where(.article > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-base :where(.article > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.article > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose-base :where(.article > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose-base :where(.article > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose-base :where(.article > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose-base :where(.article > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-base :where(.article > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-lg :where(.article > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.article > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}

.prose-lg :where(.article > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.article > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}

.prose-lg :where(.article > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.article > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-lg :where(.article > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-xl :where(.article > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.article > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.2em;
}

.prose-xl :where(.article > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.2em;
}

.prose-xl :where(.article > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.2em;
}

.prose-xl :where(.article > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.2em;
}

.prose-xl :where(.article > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-xl :where(.article > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-2xl :where(.article > ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.article > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}

.prose-2xl :where(.article > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.article > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}

.prose-2xl :where(.article > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.article > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-2xl :where(.article > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.article{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  max-width: none;
}

.article :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"] *))){
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.article :is(:where(p):not(:where([class~="not-prose"] *))){
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.article :is(:where(a):not(:where([class~="not-prose"] *))){
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
  text-decoration-line: none;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.article :is(:where(a):not(:where([class~="not-prose"] *))):hover{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.article :is(:where(blockquote):not(:where([class~="not-prose"] *))){
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.article :is(:where(strong):not(:where([class~="not-prose"] *))){
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

@media (min-width: 576px){

  .article{
    font-size: 1rem;
    line-height: 1.75;
  }

  .article :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .article :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .article :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }

  .article :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .article :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .article :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .article :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }

  .article :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .article :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .article :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .article :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .article :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .article :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }

  .article :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }

  .article :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .article :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }

  .article :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .article :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .article :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .article :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }

  .article :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }

  .article :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .article :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }

  .article :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }

  .article :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }

  .article :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }

  .article :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .article :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .article :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  .article :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .article :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .article :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .article :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .article :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .article :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .article :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}

@media (min-width: 768px){

  .article{
    font-size: 1.125rem;
    line-height: 1.7777778;
  }

  .article :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .article :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }

  .article :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }

  .article :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }

  .article :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }

  .article :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }

  .article :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }

  .article :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .article :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .article :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .article :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .article :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }

  .article :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }

  .article :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8666667em;
  }

  .article :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }

  .article :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }

  .article :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }

  .article :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }

  .article :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }

  .article :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }

  .article :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4444444em;
  }

  .article :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .article :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }

  .article :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }

  .article :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }

  .article :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }

  .article :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .article :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }

  .article :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
  }

  .article :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }

  .article :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .article :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .article :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }

  .article :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .article :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .article :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .article :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.container{
  width: 100%;
}
@media (min-width: 576px){

  .container{
    max-width: 576px;
  }
}
@media (min-width: 768px){

  .container{
    max-width: 768px;
  }
}
@media (min-width: 992px){

  .container{
    max-width: 992px;
  }
}
.aspect-w-16{
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 16;
}
.aspect-w-16 > *{
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.aspect-h-9{
  --tw-aspect-h: 9;
}
.aspect-h-11{
  --tw-aspect-h: 11;
}
.pointer-events-none{
  pointer-events: none;
}
.fixed{
  position: fixed;
}
.absolute{
  position: absolute;
}
.relative{
  position: relative;
}
.inset-0{
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.inset-x-0{
  left: 0px;
  right: 0px;
}
.top-1{
  top: 0.25rem;
}
.left-1{
  left: 0.25rem;
}
.-bottom-2\.5{
  bottom: -0.625rem;
}
.-bottom-2{
  bottom: -0.5rem;
}
.right-0{
  right: 0px;
}
.top-0{
  top: 0px;
}
.right-4{
  right: 1rem;
}
.top-16{
  top: 4rem;
}
.top-\[4\.2rem\]{
  top: 4.2rem;
}
.top-\[4\.5rem\]{
  top: 4.5rem;
}
.top-\[4\.4rem\]{
  top: 4.4rem;
}
.top-\[4\.3rem\]{
  top: 4.3rem;
}
.top-\[4\.25rem\]{
  top: 4.25rem;
}
.z-\[100\]{
  z-index: 100;
}
.z-50{
  z-index: 50;
}
.z-\[999\]{
  z-index: 999;
}
.z-\[9999\]{
  z-index: 9999;
}
.z-\[1000\]{
  z-index: 1000;
}
.z-\[998\]{
  z-index: 998;
}
.m-auto{
  margin: auto;
}
.mx-auto{
  margin-left: auto;
  margin-right: auto;
}
.my-2{
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.my-4{
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.my-1{
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.mt-6{
  margin-top: 1.5rem;
}
.mt-8{
  margin-top: 2rem;
}
.mt-4{
  margin-top: 1rem;
}
.block{
  display: block;
}
.flex{
  display: flex;
}
.grid{
  display: grid;
}
.hidden{
  display: none;
}
.h-screen{
  height: 100vh;
}
.h-9{
  height: 2.25rem;
}
.h-4{
  height: 1rem;
}
.h-fit{
  height: -moz-fit-content;
  height: fit-content;
}
.w-full{
  width: 100%;
}
.w-\[10px\]{
  width: 10px;
}
.w-3{
  width: 0.75rem;
}
.w-fit{
  width: -moz-fit-content;
  width: fit-content;
}
.w-auto{
  width: auto;
}
.w-6{
  width: 1.5rem;
}
.w-5{
  width: 1.25rem;
}
.w-4{
  width: 1rem;
}
.flex-grow{
  flex-grow: 1;
}
.cursor-default{
  cursor: default;
}
.grid-cols-1{
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col{
  flex-direction: column;
}
.flex-wrap{
  flex-wrap: wrap;
}
.items-end{
  align-items: flex-end;
}
.items-center{
  align-items: center;
}
.justify-end{
  justify-content: flex-end;
}
.justify-center{
  justify-content: center;
}
.justify-between{
  justify-content: space-between;
}
.gap-2{
  gap: 0.5rem;
}
.gap-8{
  gap: 2rem;
}
.gap-1{
  gap: 0.25rem;
}
.gap-4{
  gap: 1rem;
}
.space-y-6 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.space-y-16 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(4rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-x-1 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.whitespace-nowrap{
  white-space: nowrap;
}
.rounded-md{
  border-radius: 0.375rem;
}
.rounded-full{
  border-radius: 9999px;
}
.rounded-lg{
  border-radius: 0.5rem;
}
.rounded-t-md{
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
}
.rounded-r-full{
  border-top-right-radius: 9999px;
  border-bottom-right-radius: 9999px;
}
.border-2{
  border-width: 2px;
}
.border{
  border-width: 1px;
}
.border-t{
  border-top-width: 1px;
}
.border-white{
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.border-gray-200{
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}
.border-slate-700{
  --tw-border-opacity: 1;
  border-color: rgb(51 65 85 / var(--tw-border-opacity));
}
.border-transparent{
  border-color: transparent;
}
.bg-blue-500{
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}
.bg-black\/\[\.20\]{
  background-color: rgb(0 0 0 / .20);
}
.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-gray-50{
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}
.bg-slate-700{
  --tw-bg-opacity: 1;
  background-color: rgb(51 65 85 / var(--tw-bg-opacity));
}
.bg-transparent{
  background-color: transparent;
}
.bg-black\/50{
  background-color: rgb(0 0 0 / 0.5);
}
.bg-black\/75{
  background-color: rgb(0 0 0 / 0.75);
}
.bg-black\/70{
  background-color: rgb(0 0 0 / 0.7);
}
.fill-gray-500{
  fill: #6b7280;
}
.fill-current{
  fill: currentColor;
}
.fill-gray-600{
  fill: #4b5563;
}
.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}
.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.py-1{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-1\.5{
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.px-1\.5{
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}
.px-1{
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.pt-\[5rem\]{
  padding-top: 5rem;
}
.pl-6{
  padding-left: 1.5rem;
}
.pr-8{
  padding-right: 2rem;
}
.text-center{
  text-align: center;
}
.text-end{
  text-align: end;
}
.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl{
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-xs{
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-base{
  font-size: 1rem;
  line-height: 1.5rem;
}
.font-bold{
  font-weight: 700;
}
.font-medium{
  font-weight: 500;
}
.font-semibold{
  font-weight: 600;
}
.font-normal{
  font-weight: 400;
}
.capitalize{
  text-transform: capitalize;
}
.text-gray-500{
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.text-gray-600{
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-blue-500{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}
.text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.line-through{
  text-decoration-line: line-through;
}
.shadow-md{
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-300{
  transition-duration: 300ms;
}
.line-clamp-1{
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.line-clamp-2{
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.line-clamp-3{
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
.line-clamp-none{
  -webkit-line-clamp: unset;
}

.after\:my-0\.5::after{
  content: var(--tw-content);
  margin-top: 0.125rem;
  margin-bottom: 0.125rem;
}

.after\:my-0::after{
  content: var(--tw-content);
  margin-top: 0px;
  margin-bottom: 0px;
}

.after\:flex::after{
  content: var(--tw-content);
  display: flex;
}

.after\:h-1::after{
  content: var(--tw-content);
  height: 0.25rem;
}

.after\:w-24::after{
  content: var(--tw-content);
  width: 6rem;
}

.after\:rounded-md::after{
  content: var(--tw-content);
  border-radius: 0.375rem;
}

.after\:bg-blue-500::after{
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}

.hover\:border-blue-400:hover{
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}

.hover\:bg-blue-400:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity));
}

.hover\:bg-slate-700:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(51 65 85 / var(--tw-bg-opacity));
}

.hover\:fill-white:hover{
  fill: #fff;
}

.hover\:text-blue-500:hover{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.hover\:text-slate-400:hover{
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity));
}

.hover\:text-gray-400:hover{
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.hover\:text-white:hover{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:text-gray-500:hover{
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.group:hover .group-hover\:bg-black\/0{
  background-color: rgb(0 0 0 / 0);
}

@media (min-width: 576px){

  .sm\:relative{
    position: relative;
  }

  .sm\:inset-x-auto{
    left: auto;
    right: auto;
  }

  .sm\:top-auto{
    top: auto;
  }

  .sm\:my-1{
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
  }

  .sm\:-mt-1{
    margin-top: -0.25rem;
  }

  .sm\:mt-3{
    margin-top: 0.75rem;
  }

  .sm\:mb-0{
    margin-bottom: 0px;
  }

  .sm\:block{
    display: block;
  }

  .sm\:flex{
    display: flex;
  }

  .sm\:hidden{
    display: none;
  }

  .sm\:basis-2\/6{
    flex-basis: 33.333333%;
  }

  .sm\:basis-4\/6{
    flex-basis: 66.666667%;
  }

  .sm\:grid-cols-3{
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .sm\:flex-row{
    flex-direction: row;
  }

  .sm\:items-start{
    align-items: flex-start;
  }

  .sm\:items-center{
    align-items: center;
  }

  .sm\:gap-2{
    gap: 0.5rem;
  }

  .sm\:gap-0{
    gap: 0px;
  }

  .sm\:rounded-md{
    border-radius: 0.375rem;
  }

  .sm\:bg-transparent{
    background-color: transparent;
  }

  .sm\:px-0{
    padding-left: 0px;
    padding-right: 0px;
  }

  .sm\:text-xs{
    font-size: 0.75rem;
    line-height: 1rem;
  }

  .sm\:text-base{
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .sm\:text-sm{
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .sm\:aspect-h-10{
    --tw-aspect-h: 10;
  }

  .sm\:aspect-h-11{
    --tw-aspect-h: 11;
  }

  .sm\:aspect-h-12{
    --tw-aspect-h: 12;
  }

  .sm\:aspect-h-9{
    --tw-aspect-h: 9;
  }

  .sm\:shadow-none{
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .sm\:line-clamp-1{
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .sm\:line-clamp-2{
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
}

@media (min-width: 768px){

  .md\:sticky{
    position: sticky;
  }

  .md\:top-\[4\.5rem\]{
    top: 4.5rem;
  }

  .md\:-mt-1{
    margin-top: -0.25rem;
  }

  .md\:flex{
    display: flex;
  }

  .md\:hidden{
    display: none;
  }

  .md\:h-6{
    height: 1.5rem;
  }

  .md\:w-4\/6{
    width: 66.666667%;
  }

  .md\:w-2\/6{
    width: 33.333333%;
  }

  .md\:self-start{
    align-self: flex-start;
  }

  .md\:px-2{
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .md\:px-4{
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:text-xl{
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .md\:text-base{
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .md\:text-sm{
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .md\:aspect-h-11{
    --tw-aspect-h: 11;
  }

  .md\:aspect-h-9{
    --tw-aspect-h: 9;
  }

  .md\:aspect-h-12{
    --tw-aspect-h: 12;
  }

  .md\:aspect-h-13{
    --tw-aspect-h: 13;
  }

  .md\:line-clamp-2{
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
}

@media (min-width: 992px){

  .lg\:flex{
    display: flex;
  }

  .lg\:aspect-h-9{
    --tw-aspect-h: 9;
  }

  .lg\:aspect-h-11{
    --tw-aspect-h: 11;
  }

  .lg\:line-clamp-2{
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
}

